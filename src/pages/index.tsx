import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import relativeTime from "dayjs/plugin/relativeTime";

import { RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs";
import { LoadingPage, LoadingSpinner } from "~/components/loading";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-4">
      <Image
        className="h-14 w-14 rounded-full"
        src={user.profileImageUrl}
        alt="User Profile Image"
        width={56}
        height={56}
      ></Image>
      <input
        type="text"
        placeholder="Ask a question"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  dayjs.extend(relativeTime);
  const { post, author } = props;
  return (
    <div key={post.id} className="flex flex-col border-slate-600 p-4">
      <div className="flex flex-row ">
        <Image
          className="h-14 w-14 rounded-full"
          src={author.profileImageUrl}
          alt="User Profile Image"
          width={56}
          height={56}
        ></Image>
        <div className="flex flex-col p-2">
          <div className="flex">
            <span className="text-slate-300">{`@${author.username}`}</span>
            <span className=" font-thin text-slate-400">{` -  ${dayjs(
              post.createdAt
            ).fromNow()}`}</span>
          </div>
          <div className="border-b-slate-700 p-1 pb-0">{post.title}</div>
          <div className="border-b-slate-600 p-2 pl-8">{post.body}</div>
        </div>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />;
  return (
    <div className="flex flex-col">
      {data?.map((fullPost) => (
        <PostView {...fullPost}></PostView>
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser();

  const { data, isLoading: postsLoaded } = api.posts.getAll.useQuery();

  if (!userLoaded && !postsLoaded) return <LoadingPage />;
  if (!data) return <div>No Posts</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center">
        <div className="h-screen w-full border-x border-slate-600 md:max-w-2xl">
          <div className="w-full border-y border-slate-600 p-4">
            {!isSignedIn && <SignInButton />}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
